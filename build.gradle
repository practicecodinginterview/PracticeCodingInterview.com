import org.gradle.internal.logging.text.StyledTextOutput;
import org.gradle.internal.logging.text.StyledTextOutputFactory;
import static org.gradle.internal.logging.text.StyledTextOutput.Style;

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.google.guava:guava:27.0.1-jre'

    // Use JUnit test framework
    // Tests are collocated with solutions for readability and hence
    // they are included in the implementation
    implementation 'junit:junit:4.12'
}

// Override the default behavior of looking for tests in `src/test`
// This is because tests and solutions need to be in the same physical location
// for readability since this is a guide.
sourceSets {
    test {
        java.srcDir file('src/main/java')
        resources.srcDir file('src/main/resources')
    }
}

task message(){
    doLast {
	def out = services.get(StyledTextOutputFactory).create("blah")
	out.withStyle(Style.Identifier).println('PracticeCodingInterview.com')
	out.withStyle(Style.Info).println('Interested in mock coding or system design interviews? Check out http://www.practicecodinginterview.com')
    }
}

build.finalizedBy(message)
test.finalizedBy(message)

// Define the main class for the application
mainClassName = 'practice.coding.interview.App'
